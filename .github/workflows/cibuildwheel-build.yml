name: Cibuildwheels

on:
  workflow_dispatch:

jobs:
  linux:
    name: Wheel
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build:
          - cp37
          - pp37
          - pp38
          - pp39

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Update pip
        run: python -m pip install -U pip wheel setuptools

      - name: Install requirements
        run: python -m pip install -Ur requirements-dev.txt

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_FRONTEND: build
          CIBW_BUILD: ${{ matrix.build }}-*
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64
          CIBW_ARCHS: x86_64
          CIBW_ENVIRONMENT: >
            PATH="$PATH:$HOME/.cargo/bin"
            LIBSECCOMP_LINK_TYPE="static"
            LIBSECCOMP_LIB_PATH="/project/dist-libseccomp/lib"
          CIBW_BEFORE_ALL_LINUX: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --verbose --profile minimal --default-toolchain stable || true
            rustup target add x86_64-unknown-linux-gnu x86_64-unknown-linux-musl
          CIBW_BEFORE_BUILD_LINUX: |
            apt-get -y update || true
            yum -y update || true
            apk update || true

            apt-get -y install gperf graphviz || true
            yum -y install gperf graphviz || true
            apk add gperf graphviz  || true

            make -j4 dist-libseccomp/lib/libseccomp.a
          CIBW_TEST_COMMAND: python3 {project}/hello-world.py

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Wheelhouse
          path: ./wheelhouse/*.whl
